{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red0\green0\blue0;\red170\green13\blue145;
\red92\green38\blue153;\red196\green26\blue22;\red63\green110\blue116;\red46\green13\blue110;\red28\green0\blue207;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;
\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c18100\c5200\c43100;\csgenericrgb\c11000\c0\c81000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 //\
//  ViewController.swift\
//  vce2017\
//\
//  Created by Christian Elawad on 2017-05-04.\
//  Copyright \'a9 2017 Christian Elawad. All rights reserved.\
//\
\cf3 \
\cf4 import\cf3  UIKit\
\cf4 import\cf3  MapKit\
\cf4 import\cf3  CoreLocation\
\
\
\cf4 class\cf3  ViewController: \cf5 UIViewController\cf3  \{\
\
    \cf4 @IBOutlet\cf3  \cf4 weak\cf3  \cf4 var\cf3  Map: \cf5 MKMapView\cf3 !\
    \
    \cf2 //URL to our web service\
\cf3     \cf4 let\cf3  URL_SAVE_TEAM = \cf5 URL\cf3 (string: \cf6 "http://172.20.10.5/VCE/DbInterface.php"\cf3 )\
    \
    \
    \cf2 //TextFields declarations\
\cf3     \cf4 @IBOutlet\cf3  \cf4 weak\cf3  \cf4 var\cf3  textFieldName: \cf5 UITextField\cf3 !\
    \cf4 @IBOutlet\cf3  \cf4 weak\cf3  \cf4 var\cf3  textFieldMember: \cf5 UITextField\cf3 !\
    \
    \
    \
    \cf2 //Button action method\
\cf3     \cf4 @IBAction\cf3  \cf4 func\cf3  buttonSave(sender: \cf5 UIButton\cf3 ) \{\
        \
        \cf2 //creating NSMutableURLRequest\
\cf3         \cf4 let\cf3  request = \cf5 NSMutableURLRequest\cf3 (url: \cf7 URL_SAVE_TEAM\cf3 !)\
        \
        \cf2 //setting the method to post\
\cf3         request.\cf5 httpMethod\cf3  = \cf6 "POST"\cf3 \
        \
        \cf2 //getting values from text fields\
\cf3         \cf4 let\cf3  teamName=\cf7 textFieldName\cf3 .\cf5 text\cf3 \
        \cf4 let\cf3  memberCount = \cf7 textFieldMember\cf3 .\cf5 text\cf3 \
        \
        \cf2 //creating the post parameter by concatenating the keys and values from text field\
\cf3         \cf4 let\cf3  postParameters = \cf6 "name="\cf8 +\cf3 teamName!\cf8 +\cf6 "&member="\cf8 +\cf3 memberCount!;\
        \
        \cf2 //adding the parameters to request body\
\cf3         request.\cf5 httpBody\cf3  = postParameters.\cf8 data\cf3 (using: \cf5 String\cf3 .\cf5 Encoding\cf3 .\cf5 utf8\cf3 )\
        \
        \
        \cf2 //creating a task to send the post request\
\cf3         \cf4 let\cf3  task = \cf5 URLSession\cf3 .\cf5 shared\cf3 .\cf8 dataTask\cf3 (with: request \cf4 as\cf3  \cf5 URLRequest\cf3 )\{\
            data, response, error \cf4 in\cf3 \
            \
            \cf4 if\cf3  error != \cf4 nil\cf3 \{\
                \cf8 print\cf3 (\cf6 "error is \cf3 \\\cf6 (\cf3 error\cf6 )"\cf3 )\
                \cf4 return\cf3 ;\
            \}\
            \
            \cf2 //parsing the response\
\cf3             \cf4 do\cf3  \{\
                \cf2 //converting resonse to NSDictionary\
\cf3                 \cf4 let\cf3  myJSON = \cf4 try\cf3  \cf5 JSONSerialization\cf3 .\cf8 jsonObject\cf3 (with: data!, options: .\cf5 mutableContainers\cf3 ) \cf4 as\cf3 ? \cf5 NSDictionary\cf3 \
                \
                \cf2 //parsing the json\
\cf3                 \cf4 if\cf3  \cf4 let\cf3  parseJSON = myJSON \{\
                    \
                    \cf2 //creating a string\
\cf3                     \cf4 var\cf3  msg : \cf5 String\cf3 !\
                    \
                    \cf2 //getting the json response\
\cf3                     msg = parseJSON[\cf6 "message"\cf3 ] \cf4 as\cf3 ! \cf5 String\cf3 ?\
                    \
                    \cf2 //printing the response\
\cf3                     \cf8 print\cf3 (msg)\
                    \
                \}\
            \} \cf4 catch\cf3  \{\
                \cf8 print\cf3 (error)\
            \}\
            \
        \}\
        \cf2 //executing the task\
\cf3         task.\cf8 resume\cf3 ()\
        \
    \}\
    \
    \
    \
    \cf4 override\cf3  \cf4 func\cf3  viewDidLoad() \{\
        \cf4 super\cf3 .\cf8 viewDidLoad\cf3 ()\
        \cf2 // Do any additional setup after loading the view, typically from a nib.\
\cf3         \
        \
        \
        \cf4 var\cf3  location = \cf8 CLLocationCoordinate2DMake\cf3 (\cf9 56.182850383\cf3 , \cf9 15.591162818\cf3 )\
        \
        \
        \cf4 var\cf3  span = \cf8 MKCoordinateSpanMake\cf3 (\cf9 0.002\cf3 , \cf9 0.002\cf3 )\
        \
        \cf4 var\cf3  region = \cf5 MKCoordinateRegion\cf3 (center: location, span: span)\
        \
        \cf7 Map\cf3 .\cf8 setRegion\cf3 (region, animated: \cf4 true\cf3 )\
        \
        \cf4 var\cf3  annotation = \cf5 MKPointAnnotation\cf3 ()\
        \
        annotation.\cf5 coordinate\cf3  = location\
        annotation.\cf5 title\cf3  = \cf6 "stone"\cf3 \
        annotation.\cf5 subtitle\cf3  = \cf6 "hassans"\cf3 \
        \
        \cf7 Map\cf3 .\cf8 addAnnotation\cf3 (annotation)\
        \
    \}\
\
    \cf4 override\cf3  \cf4 func\cf3  didReceiveMemoryWarning() \{\
        \cf4 super\cf3 .\cf8 didReceiveMemoryWarning\cf3 ()\
        \cf2 // Dispose of any resources that can be recreated.\
\cf3     \}\
\
\
\}\
\
\
\
}